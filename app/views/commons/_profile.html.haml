.container
  .profilePager
    .profilePage_user
      .profilePage_user_name
        @
        = user.username
      .profilePage_user_image
        .profilePage_user_actionButton
          - if user == current_user
            = link_to 'Edit', edit_profile_path
        
        .profilePage_followbtn
          .profilePage_followbtn_following.following.hidden
            フォロー中
          .profilePage_followbtn_follow.follow.hidden
            フォローする
        = user.display_name
        .profilePage_user_introduction
          = user.profile&.introduction

= form_with(model: @profile, url: profile_path, method: 'put', local: true) do |f|
  .circle-avatar
    %img#avatar_img_prev.hidden{:src => "#"}
      - if current_user.persisted? && current_user.avatar_image
        = image_tag user.avatar_image, class: 'avatar_present_img'
      - else
        = image_tag 'default-avatar.png', class: 'avatar_present_img'
        = f.hidden_field :avatar_cache
      = f.file_field :avatar, id: 'post_img'
      = f.submit '保存',id: 'post_btn'

  .profilePage_value
    .profilePage_value_posts
      .profilePage_value_posts_count
        %p=user.articles.count
      .profilePage_value_posts_text
        投稿

    = link_to account_followings_path(user) do
      .profilePage_value_followers
        .profilePage_value_followers_count#follower_count
          %p= user.follower_count
        .profilePage_value_followers_text
          フォロワー
        
    = link_to account_follows_path(user) do
      .profilePage_value_following
        .profilePage_value_following_count
          %p= user.following_count
        .profilePage_value_following_text
          フォロー中



- user.articles.each do |article|
  = render 'commons/article', article: article
  

